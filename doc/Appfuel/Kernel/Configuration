Configuration in appfuel is broken down into two categories: PHP configuration
and User configuration. All configuration in appfuel follow these rules:
a)	Config data can be stored in files located at app/config 		
b)	Config data can also be passed in manually as an array
c)	Once obtained config data is kept in a configuration registry.
d)	A config handler will run all config strategies known as startup task.
e)	A startup task is a class that encapsulates the logic needed to apply
	its particular configuration.
f)	A startup task defines the keys it uses in the registry.
g)	Both php and user startup tasks are defined in the config data as 
	an array of strings (fully qualified startup class names)
h)	Appfuel comes with five php startup tasks:

	1) Appfuel\Kernel\Config\PHPIniTask
	2) Appfuel\Kernel\Config\PHPPathTask
	3) Appfuel\Kernel\Config\PHPAutoloaderTask
	4) Appfuel\Kernel\Config\PHPTimezoneTask
	5) Appfuel\Kernel\Config\PHPErrorTask 
	   * this provides a readable interface to error reporting level but
	     the same thing can be achieved with PHPIniStartup

i)	The handler can collect all startup tasks from the config registry
	with the key: startup-tasks
j)	The handler can run all startup tasks listed in -(startup-tasks) or 
	run a startup task individually. 
k)	The handler can collect data from the registry as specified by keys
    defined in the startup task. This is the automated way of running tasks
l)  The handler can also manualy accept parameters for a statup task to be 
	run with. This is the manual way of running a task
l)	After processing, the handler will ask the strategy for its status,
	storing a list of startup task status messages which may be used in 
	debugging. Each message is stored with fully qualified class name of the
	startup task that ran as the key for the message.

